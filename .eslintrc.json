{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json"
  },
  "plugins": [
    "jest",
    "@typescript-eslint",
    "@next/eslint-plugin-next",
    "import",
    "react-hooks",
    "jsx-a11y",
    "react",
    "unused-imports"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:@next/next/recommended"
  ],
  "env": {
    "jest/globals": true
  },
  "ignorePatterns": [
    ".eslintrc.json",
    "configs/*",
    "testCoverage/*",
    "middleware/*",
    "build/*",
    "lambdas/*",
    "next.config.js",
    "__mocks__/**/*",
    "src/**/__mocks__/*",
    "src/**/*.stories.*",
    "jest.config.js",
    "package.json",
    "package-lock.json",
    "storybook-static/*",
    "next-env.d.ts",
    "*.config.js",
    "*.config.json",
    "reports/*",
    "public/mockServiceWorker.js",
    "public/__ENV.js"
  ],
  "rules": {
    "react/prop-types": "off",
    "react/jsx-filename-extension": [
      1,
      {
        "extensions": [
          ".tsx"
        ]
      }
    ],
    "react/sort-comp": [
      0
    ],
    "react/jsx-props-no-spreading": [
      0
    ],
    "react/jsx-one-expression-per-line": [
      0
    ],
    "jsx-a11y/anchor-is-valid": [
      0
    ],
    "react/jsx-boolean-value": [
      "error",
      "always"
    ],
    "@typescript-eslint/no-shadow": [
      "error"
    ],
    "@typescript-eslint/no-explicit-any": 0,
    "@typescript-eslint/explicit-module-boundary-types": 0,
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_",
        "ignoreRestSiblings": true
      }
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
        "groups": [
          "builtin",
          "external",
          "internal",
          "parent",
          "sibling",
          "index"
        ],
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        },
        "pathGroupsExcludedImportTypes": [
          "builtin"
        ],
        "pathGroups": [
          {
            "pattern": "^(?!(common|@lick|@server|~src|\\.)).+",
            "group": "external"
          },
          {
            "pattern": "^(@lick|@server)",
            "group": "internal"
          },
          {
            "pattern": "^(common)",
            "group": "internal",
            "position": "after"
          },
          {
            "pattern": "^(~src)",
            "group": "parent"
          },
          {
            "pattern": "^\\.+",
            "group": "sibling"
          }
        ]
      }
    ],
    "align": 0,
    "ban": 0,
    "curly": 2,
    "guard-for-in": 1,
    "indent": [
      2,
      2
    ],
    "jsx-quotes": [
      "error",
      "prefer-double"
    ],
    "max-len": [
      "error",
      {
        "code": 120,
        "tabWidth": 2,
        "ignoreComments": true,
        "ignoreTrailingComments": true,
        "ignoreUrls": true
      }
    ],
    "no-bitwise": 2,
    "no-console": [
      "error",
      {
        "allow": [
          "debug",
          "error",
          "info",
          "time",
          "timeEnd",
          "trace"
        ]
      }
    ],
    "no-multiple-empty-lines": 2,
    "no-shadow": "off",
    "no-debugger": 1,
    "no-duplicate-imports": "error",
    "no-empty": "error",
    "no-eval": "error",
    "default-case": "warn",
    "no-trailing-spaces": 1,
    "no-var": "error",
    "radix": "error",
    "semi": "error",
    "eqeqeq": [
      "error",
      "always",
      {
        "null": "ignore"
      }
    ],
    "@typescript-eslint/naming-convention": [
      "warn",
      {
        "selector": "default",
        "format": [
          "camelCase",
          "PascalCase"
        ],
        "leadingUnderscore": "allow"
      },
      {
        "selector": "variable",
        "format": [
          "camelCase",
          "UPPER_CASE",
          "PascalCase"
        ]
      },
      {
        "selector": "parameter",
        "format": [
          "camelCase",
          "PascalCase"
        ],
        "leadingUnderscore": "allow"
      },
      {
        "selector": "memberLike",
        "modifiers": [
          "private"
        ],
        "format": [
          "camelCase"
        ],
        "leadingUnderscore": "require"
      },
      {
        "selector": "typeLike",
        "format": [
          "PascalCase"
        ]
      },
      {
        "selector": "interface",
        "format": [
          "PascalCase"
        ],
        "custom": {
          "regex": "^I[A-Z]",
          "match": true
        }
      },
      {
        "selector": "typeAlias",
        "format": [
          "PascalCase"
        ],
        "custom": {
          "regex": "^T[A-Z]",
          "match": true
        }
      },
      {
        "selector": "enum",
        "format": [
          "PascalCase"
        ],
        "custom": {
          "regex": "^E[A-Z]",
          "match": true
        }
      }
    ],
    "@typescript-eslint/adjacent-overload-signatures": "error",
    "@typescript-eslint/typedef": "error",
    "@typescript-eslint/no-submodule-imports": 0,
    "@typescript-eslint/array-type": 0,
    "@typescript-eslint/ban-types": 0,
    "@typescript-eslint/jsx-boolean-value": 0,
    "@typescript-eslint/jsx-wrap-multiline": 0,
    "@typescript-eslint/member-access": 0,
    "@typescript-eslint/no-empty-interface": 2,
    "@typescript-eslint/no-namespace": 0,
    "@typescript-eslint/object-literal-sort-keys": 0,
    "prefer-arrow-callback": 1,
    "@typescript-eslint/prefer-for-of": 1,
    "@typescript-eslint/no-implicit-dependencies": 0
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  }
}